from pathlib import Path

from pydantic_settings import BaseSettings, SettingsConfigDict

# define path to the root folder
# Path(__file__) -> current file (config.py)
# .parent -> папка (car_qr_service)
# .parent -> папка (src)
# .parent -> root of the project
ROOT_DIR = Path(__file__).parent.parent.parent

# define path to database file in the root folder
DB_FILE = ROOT_DIR / "car_qr.db"
DB_URL = f"sqlite+aiosqlite:///{DB_FILE}"

class Settings(BaseSettings):
    """
    This class stores settings of the application.
    Use pydantic-settings to load settings from .env file
    """
    # URL to connect to database
    DB_URL: str = DB_URL
    JWT_SECRET_KEY: str  # secret key is been generated by developer and stores in .env file only - do not share
    JWT_ALGORITHM: str = "HS256"  # hash algorithm for JSON Web Token
    ACCESS_TOKEN_EXPIRE_MINUTES: int = 30  # minutes period for token life validity

    model_config = SettingsConfigDict(env_file=".env") # read settings from created .env file


# Create global instance of Settings - could be imported into other modules
settings = Settings()
